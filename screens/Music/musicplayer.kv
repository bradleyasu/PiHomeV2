#:kivy 2.0.0
<MusicPlayer>:
    size: self.size
    pos: self.pos
    size_hint: 1, 1
    canvas.before:
        Color:
            rgba:  (0,0,0,0)
        Rectangle:
            pos: self.pos
            size: self.size
        
    FloatLayout:
        size: self.size
        pos: self.pos
        size_hint: 1, 1
        canvas.before:
            Color:
                rgba: root.background_color_prime
            Rectangle:
                pos: root.pos
                size: root.size   

        ScrollView:
            canvas.before:
                Color:
                    rgba: root.background_color_secondary
                Rectangle:
                    pos: root.pos
                    size: root.size

            pos: 0, 0
            size_hint: None, None
            size: dp(root.expand_offset), root.height

            GridLayout:
                id: audio_playlist
                cols: 1
                size_hint_y: None
        
        FloatLayout:
            size: dp(root.width) - dp(root.expand_offset), dp(root.height)
            pos: dp(root.expand_offset), 0
            size_hint: None, None

            canvas:
                Color:
                    rgba: (0, 1, 0, 0.0)
                Rectangle:
                    pos: self.pos
                    size: self.size


            NetworkImage:
                url: root.album_art if root.qr_active == False else root.qr
                size: dp(128), dp(128)
                pos: (dp(root.expand_offset) + ((root.width - dp(root.expand_offset)) / 2 - self.width / 2)), (root.height / 2 - self.height / 2 + dp(100)) 
                on_touch_down: root.toggle_qr(*args)

            Label:
                id: "media_playing_title"
                text: root.media_name[0:30]
                color: root.text_color
                font_size: '20sp'
                font_name: 'Nunito'
                pos: (dp(root.expand_offset) + ((root.width - dp(root.expand_offset)) / 2 - self.width / 2)), root.height / 2 - self.height / 2

            Widget:
                size_hint: None, None
                size: dp(300), dp(2)
                pos: (dp(root.expand_offset) + ((root.width - dp(root.expand_offset)) / 2 - self.width / 2)), (root.height / 2 - self.height / 2 - dp(60)) 
                canvas.before:
                    Color:
                        rgba: root.track_color
                    Rectangle:
                        pos: self.pos
                        size: self.size  
                    Color:
                        rgba: root.track_prog_color
                    Rectangle:
                        pos: self.pos
                        size: dp(root.percent * 300 /100), dp(2) 


            NetworkImage:
                url: root.play_control_btn
                size: dp(64), dp(64)
                pos: (dp(root.expand_offset) + ((root.width - dp(root.expand_offset)) / 2 - self.width / 2)), (root.height / 2 - self.height / 2 - dp(140)) 
                on_touch_down: root.toggle_play(*args)

            NetworkImage:
                url: root.last_btn
                size: dp(32), dp(32)
                pos: (dp(root.expand_offset) + ((root.width - dp(root.expand_offset)) / 2 - self.width / 2 - dp(84))), (root.height / 2 - self.height / 2 - dp(140)) 
                on_touch_down: root.prev(*args)

            NetworkImage:
                url: root.next_btn
                size: dp(32), dp(32)
                pos: (dp(root.expand_offset) + ((root.width - dp(root.expand_offset)) / 2 - self.width / 2 + (dp(84)))), (root.height / 2 - self.height / 2 - dp(140)) 
                on_touch_down: root.next(*args)

            Volume:
                pos: (root.width - dp(50)), (root.height/2 - self.height/2)

            Widget:
                size_hint: None, None
                size: dp(30), dp(80)
                pos: (dp(root.expand_offset + 20)), root.height - dp(80)
                on_touch_down: root.toggle_queue(*args)
                canvas.before:
                    Color:
                        rgba: (1,1,1,1)
                    RoundedRectangle:
                        pos: self.x, self.y + dp(60)
                        size: self.width, dp(5)
                    RoundedRectangle:
                        pos: self.x, self.y + dp(50)
                        size: self.width, dp(5)
                    RoundedRectangle:
                        pos: self.x, self.y + dp(40)
                        size: self.width, dp(5)